#!/bin/bash
#! Script to build the whole project when its your firstday
set -e

MAVEN_OPTS="-Xmx6000m -XX:MaxPermSize=4000m"
JAVA_HOME=/usr/lib/jvm/java-7-oracle
JRE_HOME=$JAVA_HOME/jre
CLASSPATH=.:$JAVA_HOME/lib:$JRE_HOME/lib:$CLASSPATH
PATH=$JAVA_HOME/bin:$JRE_HOME/bin:$PATH

echo "MAVEN_OPTS=$MAVEN_OPTS"

function usage() {
	echo "USAGE: $0 [-clean] hive/spark/idbc/inceptor/all"
}

if [[ -z $DEVROOT ]]; then
	  echo "export DEVROOT=/path/to/projects; then continue"
	  exit 0;
fi

HIVE=hive-0.12.0-transwarp
NGMR=ngmr-1.7-transwarp
THISPATH=$(cd ${0%/*} && echo $PWD/${0##*/})
ACTIONS=("hive" "spark" "idbc" "inceptor" "all")
CLEAN="false"
ACTION=${@:$#}

# Check CLI options
if [ $# -lt 1 ]; then
    usage && exit 1;
fi

while [ $# -gt 0 ]; do
  COMMAND=$1
  case $COMMAND in
    -clean)
      CLEAN="true" && shift;;
    *)
      break;;
  esac
done

if [[ "${ACTIONS[@]}" =~ "${ACTION}" ]]; then
    echo ">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"
    echo "mvn clean: $CLEAN"
    echo "target: $ACTION"
    echo ""
    echo "DEVROOT=$DEVROOT"
    echo "HIVE=$DEVROOT/$HIVE"
    echo "NGMR=$DEVROOT/$NGMR"
    echo "<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<"
    while true; do
        read -p "Do you want to compile using above configurations? (y/n) " yn
        case $yn in
            [Yy]* ) break;;
            [Nn]* ) exit;;
            * ) echo "Please answer yes or no.";;
        esac
    done
else
    usage && exit 1;
fi

function notify() {
    alert "$1" &
    spd-say "$1"
}

function build_hive() {
    cd $DEVROOT/$HIVE/src
    if [[ $ACTION == "hive" || $ACTION == "all" ]]; then
        if [[ $CLEAN == "true" ]]; then mvn clean; fi
        mvn package install -DskipTests -Pidea
        notify "Hive building completed"
    fi
}

function build_spark() {
    cd $DEVROOT/$NGMR/spark
    if [[ $ACTION == "spark" || $ACTION == "all" ]]; then
        if [[ $CLEAN == "true" ]]; then mvn clean; fi
        mvn package install -DskipTests -Pyarn -Pidea
        notify "Spark building completed"
    fi
}

function build_idbc() {
    cd $DEVROOT/$NGMR/idbc
    if [[ $ACTION == "idbc" || $ACTION == "all" ]]; then
        if [[ $CLEAN == "true" ]]; then mvn clean; fi
        mvn package install -DskipTests
        notify "Driver building completed"
    fi
}

function build_inceptor() {
    cd $DEVROOT/$NGMR/inceptor
    if [[ $ACTION == "inceptor" || $ACTION == "all" ]]; then
        if [[ $CLEAN == "true" ]]; then mvn clean; fi
        mvn package install -Dmaven.test.skip=true -Pidea
        notify "Inceptor building completed"
    fi
}

build_hive
build_spark
build_idbc
build_inceptor


function sync_firstday() {

    VER=tdh500

    echo "Copying for Jenkins regression tests ..."
    rm -rf ~/jars/*

    rsync -aXS $DEVROOT/$HIVE/src/metastore/target/hive-metastore-0.12.0-transwarp-${VER}.jar  ~/jars
    rsync -axS $DEVROOT/$HIVE/src/hbase-handler/target/hive-hbase-handler-0.12.0-transwarp-${VER}.jar  ~/jars
    rsync -axS $DEVROOT/$HIVE/src/service/target/hive-service-0.12.0-transwarp-${VER}.jar  ~/jars
    rsync -axS $DEVROOT/$HIVE/src/cli/target/hive-cli-0.12.0-transwarp-${VER}.jar  ~/jars
    rsync -axS $DEVROOT/$HIVE/src/serde/target/hive-serde-0.12.0-transwarp-${VER}.jar  ~/jars
    rsync -axS $DEVROOT/$HIVE/src/hwi/target/hive-hwi-0.12.0-transwarp-${VER}.jar  ~/jars
    rsync -axS $DEVROOT/$HIVE/src/common/target/hive-common-0.12.0-transwarp-${VER}.jar  ~/jars
    rsync -axS $DEVROOT/$HIVE/src/ql/target/hive-exec-0.12.0-transwarp-${VER}.jar  ~/jars
    rsync -axS $DEVROOT/$HIVE/src/beeline/target/hive-beeline-0.12.0-transwarp-${VER}.jar  ~/jars
    rsync -axS $DEVROOT/$HIVE/src/contrib/target/hive-contrib-0.12.0-transwarp-${VER}.jar  ~/jars
    rsync -axS $DEVROOT/$HIVE/src/jdbc/target/hive-jdbc-0.12.0-transwarp-${VER}.jar  ~/jars
    rsync -aXS $DEVROOT/$HIVE/src/shims/target/hive-shims-aggregator-0.12.0-transwarp-${VER}-combined.jar ~/jars/hive-shims-0.12.0-transwarp-${VER}.jar

    rsync -aXS $DEVROOT/$NGMR/idbc/jdbc/target/scala-2.10/jdbcdrive-1.0.0-transwarp-${VER}.jar ~/jars
    rsync -aXS $DEVROOT/$NGMR/idbc/hyperdrive/target/scala-2.10/hyperdrive-1.0.0-transwarp-${VER}.jar ~/jars
    rsync -aXS $DEVROOT/$NGMR/idbc/core/target/scala-2.10/idbc-core-1.0.0-transwarp-${VER}.jar ~/jars
    rsync -aXS $DEVROOT/$NGMR/idbc/esdrive/target/scala-2.10/esdrive-1.0.0-transwarp-${VER}.jar  ~/jars

    rsync -aXS $DEVROOT/$NGMR/spark/stargate/target/scala-2.10/spark-stargate_2.10-1.1.0-transwarp-${VER}.jar ~/jars/ngmr-stargate_2.10-1.1.0-transwarp-${VER}.jar
    rsync -aXS $DEVROOT/$NGMR/spark/core/target/scala-2.10/spark-core_2.10-1.1.0-transwarp-${VER}.jar  ~/jars/ngmr-core_2.10-1.1.0-transwarp-${VER}.jar
    rsync -aXS $DEVROOT/$NGMR/spark/holodesk/target/scala-2.10/spark-holodesk_2.10-1.1.0-transwarp-${VER}.jar ~/jars/ngmr-holodesk_2.10-1.1.0-transwarp-${VER}.jar
    rsync -aXS $DEVROOT/$NGMR/inceptor/target/scala-2.10/inceptor_2.10-1.1.0-transwarp-${VER}.jar ~/jars/ngmr-shell_2.10-1.1.0-transwarp-${VER}.jar

    echo "Copying for dell regression tests ..."
    mkdir -p ~/jars-dell/hive
    mkdir -p ~/jars-dell/ngmr
    rm -rf ~/jars-dell/hive/*.jar
    rm -rf ~/jars-dell/ngmr/*.jar

    rsync -aXS $DEVROOT/$HIVE/src/metastore/target/hive-metastore-0.12.0-transwarp-${VER}.jar                   ~/jars-dell/hive/hive-metastore-0.12.0-transwarp-tdh460.jar
    rsync -axS $DEVROOT/$HIVE/src/hbase-handler/target/hive-hbase-handler-0.12.0-transwarp-${VER}.jar           ~/jars-dell/hive/hive-hbase-handler-0.12.0-transwarp-tdh460.jar
    rsync -axS $DEVROOT/$HIVE/src/service/target/hive-service-0.12.0-transwarp-${VER}.jar                       ~/jars-dell/hive/hive-service-0.12.0-transwarp-tdh460.jar
    rsync -axS $DEVROOT/$HIVE/src/cli/target/hive-cli-0.12.0-transwarp-${VER}.jar                               ~/jars-dell/hive/hive-cli-0.12.0-transwarp-tdh460.jar
    rsync -axS $DEVROOT/$HIVE/src/serde/target/hive-serde-0.12.0-transwarp-${VER}.jar                           ~/jars-dell/hive/hive-serde-0.12.0-transwarp-tdh460.jar
    rsync -axS $DEVROOT/$HIVE/src/hwi/target/hive-hwi-0.12.0-transwarp-${VER}.jar                               ~/jars-dell/hive/hive-hwi-0.12.0-transwarp-tdh460.jar
    rsync -axS $DEVROOT/$HIVE/src/common/target/hive-common-0.12.0-transwarp-${VER}.jar                         ~/jars-dell/hive/hive-common-0.12.0-transwarp-tdh460.jar
    rsync -axS $DEVROOT/$HIVE/src/ql/target/hive-exec-0.12.0-transwarp-${VER}.jar                               ~/jars-dell/hive/hive-exec-0.12.0-transwarp-tdh460.jar
    rsync -axS $DEVROOT/$HIVE/src/beeline/target/hive-beeline-0.12.0-transwarp-${VER}.jar                       ~/jars-dell/hive/hive-beeline-0.12.0-transwarp-tdh460.jar
    rsync -axS $DEVROOT/$HIVE/src/contrib/target/hive-contrib-0.12.0-transwarp-${VER}.jar                       ~/jars-dell/hive/hive-contrib-0.12.0-transwarp-tdh460.jar
    rsync -axS $DEVROOT/$HIVE/src/jdbc/target/hive-jdbc-0.12.0-transwarp-${VER}.jar                             ~/jars-dell/hive/hive-jdbc-0.12.0-transwarp-tdh460.jar
    rsync -aXS $DEVROOT/$HIVE/src/shims/target/hive-shims-aggregator-0.12.0-transwarp-${VER}-combined.jar ~/jars-dell/hive/hive-shims-0.12.0-transwarp-tdh460.jar

    rsync -aXS  $DEVROOT/$NGMR/spark/core/target/scala-2.10/spark-core_2.10-1.1.0-transwarp-${VER}.jar             ~/jars-dell/ngmr/ngmr-core_2.10-1.1.0-transwarp-tdh460.jar
    rsync -aXS  $DEVROOT/$NGMR/spark/holodesk/target/scala-2.10/spark-holodesk_2.10-1.1.0-transwarp-${VER}.jar     ~/jars-dell/ngmr/ngmr-holodesk_2.10-1.1.0-transwarp-tdh460.jar
    rsync -aXS  $DEVROOT/$NGMR/spark/stargate/target/scala-2.10/spark-stargate_2.10-1.1.0-transwarp-${VER}.jar     ~/jars-dell/ngmr/ngmr-stargate_2.10-1.1.0-transwarp-tdh460.jar

    rsync -aXS  $DEVROOT/$NGMR/inceptor/target/scala-2.10/inceptor_2.10-1.1.0-transwarp-${VER}.jar                 ~/jars-dell/ngmr/ngmr-shell_2.10-1.1.0-transwarp-tdh460.jar
    rsync -aXS  $DEVROOT/$NGMR/idbc/core/target/scala-2.10/idbc-core-1.0.0-transwarp-${VER}.jar                    ~/jars-dell/ngmr/idbc-core-1.0.0-transwarp-tdh460.jar
    rsync -aXS  $DEVROOT/$NGMR/idbc/hyperdrive/target/scala-2.10/hyperdrive-1.0.0-transwarp-${VER}.jar             ~/jars-dell/ngmr/hyperdrive-1.0.0-transwarp-tdh460.jar
    rsync -aXS  $DEVROOT/$NGMR/idbc/jdbc/target/scala-2.10/jdbcdrive-1.0.0-transwarp-${VER}.jar                    ~/jars-dell/ngmr/jdbcdrive-1.0.0-transwarp-tdh460.jar
    rsync -aXS  $DEVROOT/$NGMR/idbc/esdrive/target/scala-2.10/esdrive-1.0.0-transwarp-${VER}.jar                   ~/jars-dell/ngmr/esdrive-1.0.0-transwarp-tdh460.jar

}

## Copy compiled packages for regression tests
sync_firstday

exit 0;
